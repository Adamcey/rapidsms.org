{# Redirect everything to HTTPS #}
server {
    listen 80;
    server_name {{ pillar['domain'] }};
    return 301 https://{{ pillar['domain'] }}$request_uri;
}

server {
    listen 443;
    server_name {{ pillar['domain'] }};
    root {{ public_root }};

    client_max_body_size 10M;

    keepalive_timeout 5;

    access_log {{ log_dir }}/access.log;
    error_log {{ log_dir }}/error.log;

    ssl on;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_certificate {{ ssl_dir }}/{{ pillar['domain'] }}.crt;
    ssl_certificate_key {{ ssl_dir }}/{{ pillar['domain'] }}.key;
    ssl_dhparam {{ dhparams_file }};
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers   on;
    add_header Strict-Transport-Security max-age=31536000;

#    gzip  on;
#    gzip_http_version 1.1;
#    gzip_static on;
#    gzip_vary on;
#    gzip_comp_level 6;
#    gzip_proxied any;
#    gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    if ($host !~* ^({{ pillar['domain'] }}|www.{{ pillar['domain'] }})$) {
        # Deny non-matching Host headers
        return 444;
    }

    location /robots.txt {
        alias {{ public_root }}/static/robots.txt;
    }

    location /media {
        alias {{ public_root }}/media;
    }

    location /static {
        alias {{ public_root }}/static;
        expires max;
    }

    error_page 502 503 504 /502.html;
    location /502.html {
        alias {{ public_root }}/static/502.html;
    }

    # disable basic auth for superfeedr callback
    location /subscriber/ {
        auth_basic off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Protocol ssl;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_buffering on;
        proxy_intercept_errors on;
        proxy_pass http://unix:{{ socket }};
    }

    location / {
        {% if pillar['environment'] == 'staging' and auth_file %}
        auth_basic "Restricted";
        auth_basic_user_file {{ auth_file }};
        {% endif %}
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Protocol ssl;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_buffering on;
        proxy_intercept_errors on;
        proxy_pass http://unix:{{ socket }};

        rewrite ^/users/for-hire$ /users/for-hire/ permanent;
        rewrite ^/users/for-hire/$  /users/?q=&selected_facets=for_hire_exact:Yes last;
    }

}

{# redirect other server names to the real one (http://nginx.org/en/docs/http/converting_rewrite_rules.html under "A redirect to a main site") #}
server {
    listen 80 default_server;
    server_name _;
    return 301 https://{{ pillar['domain'] }}$request_uri;
}
